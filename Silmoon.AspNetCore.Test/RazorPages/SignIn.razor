@page "/signin"
@rendermode InteractiveServer
@inject IJSRuntime Js
@inject JsSilmoonAuthInterop Jsa
@inject NavigationManager NavigationManager

<h3>SignIn</h3>
<hr />
<div>
    <div class="form-group">
        <label for="Username">Username</label>
        <InputText id="UsernameText" class="form-control" @bind-Value="Username"></InputText>
    </div>
    <div class="form-group">
        <label for="Password">Password</label>
        <InputText id="PasswordText" class="form-control" type="password" @bind-Value="Password"></InputText>
    </div>
    <div class="form-group">
        @if (showTurnstile)
        {
            <Turnstile SiteKey="@Helper.CloudflareTurnstileSiteKey" @bind-Response="TurnstileResponse"></Turnstile>
        }
        else
        {
            <div>等待人机测试组件...</div>
        }
    </div>

    <div class="form-group">
        <button class="btn btn-primary" @onclick="doSignIn">Sign In</button>
        <a class="btn" href="signup">Sign Up</a>
    </div>
    <div class="form-group">
        @Message
    </div>
</div>

@code {
    public string Username { get; set; }
    public string Password { get; set; }
    public string Message { get; set; }
    string TurnstileResponse { get; set; }

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    async void doSignIn()
    {
        var result = await Jsa.SignIn(Username, Password);
        if (result.Success)
        {
            NavigationManager.NavigateTo("dashboard", true);
        }
        else
        {
            Message = result.Message;
            StateHasChanged();
        }
    }

    bool showTurnstile = false;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!showTurnstile)
        {
            showTurnstile = true;
            StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}
